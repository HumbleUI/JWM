name: Build and publish

on:
  push:
    branches:
      - '**'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
    paths-ignore:
      - .gitignore
      - 'docs/**'
      - 'examples/**'
      - 'extras/**'
      - CHANGELOG.md
      - LICENSE
      - README.md

jobs:
  build_linux:
    runs-on: ubuntu-latest
    container: tonsky/jwm:latest
    steps:
      - uses: actions/checkout@v3
      - run: bash -c 'source /etc/profile && python3 script/build.py --only native'
      - uses: actions/upload-artifact@v3
        with:
          name: native
          path: linux/build/libjwm_x64.so

  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - uses: abdes/gha-setup-ninja@660f330a40aefa8d11632b3f901e92a4adb33d65
      - run: |
          echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
        shell: bash
      - uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64
      - run: python3 script/build.py --only native
      - uses: actions/upload-artifact@v3
        with:
          name: native
          path: windows/build/jwm_x64.dll

  build_macos:
    runs-on: macos-11
    steps:
      - uses: actions/checkout@v3
      - uses: abdes/gha-setup-ninja@660f330a40aefa8d11632b3f901e92a4adb33d65
      - run: |
          echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
      - run: python3 script/build.py --arch=x64 --only native
      - run: python3 script/build.py --arch=arm64 --only native
      - uses: actions/upload-artifact@v3
        with:
          name: native
          path: |
            macos/build/libjwm_x64.dylib
            macos/build/libjwm_arm64.dylib

  deploy:
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows, build_macos]
    steps:
      - uses: actions/checkout@v3
      - run: |
          echo "JAVA_HOME=$JAVA_HOME_11_X64" >> $GITHUB_ENV
          echo "$JAVA_HOME_11_X64/bin" >> $GITHUB_PATH
      - run: python3 script/build.py --only java
      - uses: actions/download-artifact@v3
        with:
          name: native
          path: target/classes
      - run: python3 script/package.py --only java --ref ${{ github.ref }}
      - uses: actions/upload-artifact@v3
        with:
          name: jars
          path: |
            target/*.jar
            target/maven/META-INF/maven/io.github.humbleui/jwm/pom.xml
      - name: Print keys
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
          gpg --list-keys
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY_2 }}
      - if: ${{ startsWith(github.ref, 'refs/tags/') }}
        name: Deploy to Maven Central
        run: |
          echo -n "$GPG_SIGNING_KEY" | base64 --decode | gpg --import
          gpg --list-keys
          python3 script/release.py --only java --ref ${{ github.ref }}
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY_2 }}
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
